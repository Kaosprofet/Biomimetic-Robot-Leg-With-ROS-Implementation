close all
clear
clc
addpath('./initialization/');
addpath('./plotting/');
addpath('./kinematics/');
addpath('./pathPlanning/');
addpath('./wip-henrik/quadruped_description/urdf/');

pi = sym(pi); %Better pi

[dh, baseHeight] = initDH(pi);

xVias = [0 0 0 0 0 0 0 0 0];
yVias = [60 -60 -198 -344 -21 245 335 202 60];
zVias = [-520 -520 -520 -520 -451 -477 -511 -520 -520];
phiVias = [48.9*pi/180 65.8*pi/180 86.9*pi/180 94.1*pi/180 55.1*pi/180 28.1*pi/180 28.8*pi/180 31.0*pi/180 48.9*pi/180]-pi/8;

thetaVias = invKinViasCalc(xVias,yVias,zVias,phiVias,dh,pi);
timeLim = [2 1 2 2 2 2 1.5 2];

velLim = 0;
velVias = velViasCalc(thetaVias, velLim);
accVias = zeros(length(timeLim)+1);

%% Importing URDF file

robot = importrobot('quadruped.urdf');
config = homeConfiguration(robot);      % Store starting pose

%% Path Calculation
[thetaFuncs, velFuncs, accFuncs] = pathCalcTot(thetaVias,timeLim,velVias,accVias);
timeStep = 1/10; %time steps for plot
[thetaDiscrete, timeLine] = pathDiscrete(thetaFuncs,timeLim,timeStep);

%% Plot start position
config(2).JointPosition = double(-80*pi/180);
config(6)
show(robot, config);

%% Animation one leg

figure()
numFrames = length(timeLine);
frames = struct('cdata',cell(1,numFrames),'colormap',cell(1,numFrames));
for i = 1:numFrames
    clf;
    for j=2:4 
        config(j).JointPosition = -thetaDiscrete(j,i);
    end
    show(robot, config, 'visuals', 'on');
    frames(i) = getframe(gcf);
end

video = VideoWriter('urdfTest', 'MPEG-4');
video.FrameRate = 10;

open(video)
writeVideo(video,frames);  
close(video)
